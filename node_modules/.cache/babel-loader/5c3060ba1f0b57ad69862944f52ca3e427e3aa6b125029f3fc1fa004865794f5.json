{"ast":null,"code":"var _jsxFileName = \"/home/oni/Specno/Specno2/memory-game/src/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport './Board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board({\n  playerNames\n}) {\n  _s();\n  const [deck, setDeck] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [turn, setTurn] = useState(playerNames.player1);\n  const [scores, setScores] = useState({\n    [playerNames.player1]: 0,\n    [playerNames.player2]: 0\n  });\n  const [winner, setWinner] = useState(null);\n  useEffect(() => {\n    const cardValues = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K'];\n    const cardColors = ['red', 'black'];\n    const initializeDeck = () => {\n      const newDeck = [];\n      for (let value of cardValues) {\n        for (let color of cardColors) {\n          newDeck.push({\n            id: `${value}-${color}`,\n            value,\n            color\n          });\n        }\n      }\n      newDeck.push({\n        id: `Joker-red`,\n        value: 'Joker',\n        color: 'red'\n      });\n      newDeck.push({\n        id: `Joker-black`,\n        value: 'Joker',\n        color: 'black'\n      });\n      const shuffledDeck = shuffleDeck(newDeck.concat(newDeck));\n      setDeck(shuffledDeck);\n    };\n    const shuffleDeck = deck => {\n      for (let i = deck.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [deck[i], deck[j]] = [deck[j], deck[i]];\n      }\n      const redJokerIndex = deck.findIndex(card => card.value === 'Joker' && card.color === 'red');\n      const blackJokerIndex = deck.findIndex(card => card.value === 'Joker' && card.color === 'black');\n      if (redJokerIndex !== -1) deck.splice(redJokerIndex, 1);\n      if (blackJokerIndex !== -1) deck.splice(blackJokerIndex, 1);\n      return deck;\n    };\n    initializeDeck();\n  }, []);\n  const handleCardClick = id => {\n    setFlipped(flipped => [...flipped, id]);\n  };\n  useEffect(() => {\n    if (flipped.length === 2) {\n      const [firstCard, secondCard] = flipped;\n      if (deck[firstCard].value === deck[secondCard].value && deck[firstCard].color === deck[secondCard].color) {\n        setMatched(matched => [...matched, firstCard, secondCard]);\n        setScores(prevScores => ({\n          ...prevScores,\n          [turn]: prevScores[turn] + 10\n        }));\n      }\n      setTimeout(() => setFlipped([]), 1000);\n      setTurn(currentTurn => currentTurn === playerNames.player1 ? playerNames.player2 : playerNames.player1);\n    }\n  }, [flipped, deck, playerNames]);\n  useEffect(() => {\n    if (matched.length === deck.length) {\n      setWinner(turn);\n    } // eslint-disable-next-line \n  }, [matched, deck, turn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: playerNames.player1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", scores[playerNames.player1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: playerNames.player2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", scores[playerNames.player2]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), deck.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n      id: index,\n      value: card.value,\n      color: card.color,\n      isFlipped: flipped.includes(index) || matched.includes(index),\n      handleClick: handleCardClick\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)), winner ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"game-over\",\n      children: [\"Game Over! \", winner, \" is the winner!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Turn: \", turn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"4198ugKVOWdXWP+Ow4uEJ/+krzw=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","Card","jsxDEV","_jsxDEV","Board","playerNames","_s","deck","setDeck","flipped","setFlipped","matched","setMatched","turn","setTurn","player1","scores","setScores","player2","winner","setWinner","cardValues","cardColors","initializeDeck","newDeck","value","color","push","id","shuffledDeck","shuffleDeck","concat","i","length","j","Math","floor","random","redJokerIndex","findIndex","card","blackJokerIndex","splice","handleCardClick","firstCard","secondCard","prevScores","setTimeout","currentTurn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","isFlipped","includes","handleClick","_c","$RefreshReg$"],"sources":["/home/oni/Specno/Specno2/memory-game/src/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport './Board.css';\n\nfunction Board({ playerNames }) {\n  const [deck, setDeck] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [turn, setTurn] = useState(playerNames.player1);\n  const [scores, setScores] = useState({\n    [playerNames.player1]: 0,\n    [playerNames.player2]: 0,\n  });\n  const [winner, setWinner] = useState(null);\n\n  useEffect(() => {\n    const cardValues = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K'];\n    const cardColors = ['red', 'black'];\n\n    const initializeDeck = () => {\n      const newDeck = [];\n      for (let value of cardValues) {\n        for (let color of cardColors) {\n          newDeck.push({ id: `${value}-${color}`, value, color });\n        }\n      }\n      newDeck.push({ id: `Joker-red`, value: 'Joker', color: 'red' });\n      newDeck.push({ id: `Joker-black`, value: 'Joker', color: 'black' });\n\n      const shuffledDeck = shuffleDeck(newDeck.concat(newDeck));\n      setDeck(shuffledDeck);\n    };\n\n    const shuffleDeck = (deck) => {\n      for (let i = deck.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [deck[i], deck[j]] = [deck[j], deck[i]];\n      }\n\n      const redJokerIndex = deck.findIndex(card => card.value === 'Joker' && card.color === 'red');\n      const blackJokerIndex = deck.findIndex(card => card.value === 'Joker' && card.color === 'black');\n\n      if (redJokerIndex !== -1) deck.splice(redJokerIndex, 1);\n      if (blackJokerIndex !== -1) deck.splice(blackJokerIndex, 1);\n\n      return deck;\n    };\n\n    initializeDeck();\n  }, []);\n\n  const handleCardClick = (id) => {\n    setFlipped((flipped) => [...flipped, id]);\n  };\n\n  useEffect(() => {\n    if (flipped.length === 2) {\n      const [firstCard, secondCard] = flipped;\n      if (deck[firstCard].value === deck[secondCard].value && deck[firstCard].color === deck[secondCard].color) {\n        setMatched((matched) => [...matched, firstCard, secondCard]);\n\n        setScores((prevScores) => ({\n          ...prevScores,\n          [turn]: prevScores[turn] + 10,\n        }));\n      }\n      setTimeout(() => setFlipped([]), 1000);\n      setTurn((currentTurn) => (currentTurn === playerNames.player1 ? playerNames.player2 : playerNames.player1));\n    }\n  }, [flipped, deck, playerNames]);\n\n  useEffect(() => {\n    if (matched.length === deck.length) {\n      setWinner(turn);\n    } // eslint-disable-next-line \n  }, [matched, deck, turn]);\n\n  return (\n    <div className=\"board\">\n      <div className=\"player-section\">\n        <h2>{playerNames.player1}</h2>\n        <p>Score: {scores[playerNames.player1]}</p>\n      </div>\n      <div className=\"player-section\">\n        <h2>{playerNames.player2}</h2>\n        <p>Score: {scores[playerNames.player2]}</p>\n      </div>\n      {deck.map((card, index) => (\n        <Card\n          key={index}\n          id={index}\n          value={card.value}\n          color={card.color}\n          isFlipped={flipped.includes(index) || matched.includes(index)}\n          handleClick={handleCardClick}\n        />\n      ))}\n      {winner ? (\n        <p className=\"game-over\">Game Over! {winner} is the winner!</p>\n      ) : (\n        <p>Current Turn: {turn}</p>\n      )}\n    </div>\n  );\n}\n\nexport default Board;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}